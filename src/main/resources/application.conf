// these are constants used throughout the project

// flags for the design patterns that are implemented by program
ABSTRACT FACTORY = true
BUILDER = true
FACTORY METHOD = true
TEMPLATE = true

// signatures for the classes, functions, and interfaces
ABSTRACT CLASS = "public abstract class %s{\n\n"
CLASS = "public class %s{\n\n"
STATIC CLASS = "public static class %s{\n\n"
INTERFACE = "public interface %s {\n\n"
STATIC = "public static "

//take numbers for format-----------------------------------------------------------------
ABSTRACT FUNCTION GEN = "\tpublic abstract void abstractFunc%d();\n\n"
REGULAR FUNCTION GEN = "\tpublic void func%d(){\n\t}\n\n"
STATIC FUNCTION GEN = "\tpublic static void staticFunc%d(){\n\t}\n\n"
INTERFACE FUNCTION GEN = "\tpublic void func%d();\n\n"
FINAL FUNCTION GEN = "\tpublic final void absoluteFunction%d(){\n"
GENERIC FUNCTION CALL = "\tfunc%d();\n"
// variables
VAR DECLARATION = "\t%s var%d;\n"
PRIVATE VAR = "\tprivate %s privateVar%d;\n"
GETTER = "\tpublic %s getAttribute%d(){\n"
SETTER W RET OPTION = "\tpublic %s setAttribute%d(%s a){\n"
//-----------------------------------------------------------------------------------------


// take string for format------------------------------------------------------------------------
OVERRIDE REGULAR FUNCTION GEN = "\t@Override\n\tpublic void func%s(){\n\t}\n\n"
OVERRIDE ABSTRACT FUNCTION GEN = "\t@Override\n\tpublic void abstractFunc%s(){\n\t}\n\n"
FUNCTION WITH RETURN AND NAME = "\tpublic %s %s(){\n"
OVERRIDE FUNCTION WITH RETURN AND NAME = "\t@Override\n\tpublic %s %s(){\n"
INTERFACE FUNCTION WITH RETURN AND NAME = "\tpublic %s %s();\n\n"
RETURN NEW = "\treturn new %s();\n\t}\n\n"
RETURN NULL = "\treturn null;\n\t}\n\n"
RETURN SOMETHING = "\treturn %s;\n\t}\n\n"

CLASS IMPLEMENTS = "public class %s implements %s{\n\n"
CLASS EXTENDS = "public class %s extends %s{\n\n"
CONSTRUCTOR = "\tpublic %s(){\n\t}\n\n"
PRIVATE CONSTRUCTOR = "\tprivate %s(){\n\t}\n\n"

//switch
SWITCH = "\tswitch(){\n"
CASE RETURN NEW = "\t\tcase \"%s\":\n\t\t\treturn new %s();\n"
DEFAULT CASE = "\t\tdefault:\n\t\t\tbreak;\n\t}\n"

//-------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------- for plugin
instructions = "Input the following information in CSV format"
factoryInstructions = "\nAbstract class name, variable amount, variable type(s),\nabstract function amount, regular function amount, name of subclass(es)"
builderInstructions = "\nMain Regular class name, mandaroty attribute amount,\noptional attribute amount, mandatory attribute type(s), optional attribute type(s)"
templateInstructions = "\nMain Abstract class name, abstract function total, regular function total (can be 0),\namount of absolute processes (can be 1), number of functions in each process, name of subclass(es)"
abstractFactoryInstructions = "\nInterface name, function amount, subclass(es) name(s)"